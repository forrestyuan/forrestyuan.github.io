<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[GitHub SSH Key的设置]]></title>
    <url>%2F2017%2F12%2F26%2FGitHub-SSH-Key%E7%9A%84%E8%AE%BE%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[GitHub SSH Key的设置一、开通github账号首先前往github 官网创建一个账号。（根据官网提示操作） 二、关于SSH KeyGitHub 上链接已有仓库时的认证，是通过使用SSH的公开密钥认证方式进行的。现在让我们来创建公开密钥认证所需要的SSH Key,并将其添加到GitHub. SSH key提供了一种与GitHub通信的方式，通过这种方式，能够在不输入密码的情况下，将GitHub作为自己的remote端服务器，进行版本控制 三、设置步骤 检查SSH keys是否存在 （如不存在）生成新的ssh key 将ssh key添加到GitHub中 1、检查SSH keys12ls -al ~/.ssh# Lists the files in your .ssh directory, if they exist 2、运行下面的命令创建SSH key：12345678$ ssh-keygen -t rsa -C &quot;your_email@example.com&quot;# Creates a new ssh key using the provided emailGenerating public/privater rsas key pair.Enter file in which to save the key(/Users/your_user_directory/.ssh/id_rsa):(按回车键)Enter passphrase (empty for no passphrase):(输入密码)Enter same passphrase again:(再次输入密码) &quot;your_email@example.com&quot;的部分改成您在创建github账户时用的邮箱地址，棉麻需要在认证时输入，请选择复杂度高并且容易记忆的组合。 输入密码后会出现如下结果： 1234567891011Your identification has been saved in /Users/your_user_directory/.ssh/id_rsa.Your identification has been saved in/Users/your_user_directory/.ssh/id_rsa.The key fingerprint is:(fingerprint 的值)your_email@example.comThe Key&apos;s randomart image is:+--[ RAS 2048 ]----+| .+ + || = o O . |.... id_rsa文件是私有密钥，id_rsa.pub是公开密钥。 3、添加公开密钥在github中添加公开密钥，用自己喜欢的文本编辑器打开id_rsa.pub文件，里面的信息即为SSH key，将这些信息复制到GitHub的Add SSH key页面即可。 完成添加后，就可以用手中的私人密钥与github进行认证通信了。 1234$ ssh -T git@github.comThe authenticity of host &apos;github.com(207.97.227.239)&apos; cnt&apos;t be established. RSA key fingerprint is (fingerprint的值) Are you sure you want to coninue connnection(yes/no)? (输入yes) 出现如下结果即为成功。 1Hi hirocastest! You&apos;ve successfully authenticated, but GitHub does not provide shell access.]]></content>
      <tags>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F12%2F09%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
